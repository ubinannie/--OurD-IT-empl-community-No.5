mybatis:
  configuration:
    map-underscore-to-camel-case: true
 
    
    
server: 
  port: 9090
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

      
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://localhost:3306/ourd?serverTimezone=Asia/Seoul
    username: ourd
    password: ourd1234
    
    
  spring:
    thymeleaf:
       prefix : classpath:templates/
       suffix : .html
       cache : false 

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    
  security:
    oauth2:
      client:
        registration:
        
        
          google: #/oauth2/authorization/google 이 주소를 동작하게함 
            client-id: 657494768725-sv7369o40n5uua5f8juten5ihtv8dslk.apps.googleusercontent.com 
            client-secret: VNxc2KyJE6q97WbmialZuuAd 
            scope:
            - email
            - profile
                  
          facebook:
            client-id: 382232423064735
            client-secret: 9dd3e50fc4ef5cf6a17d755f5c529a5a
            scope:
            - email
            - public_profile
          
          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: _gHMUMoxMRdwFcs9n3uI
            client-secret: Uzike8Vcg_
            scope:
            - name
            - email
            - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:9090/login/oauth2/code/naver


        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.  
---

spring:
  profiles:
    active: alpha
  redis:
    host: localhost
    port: 6379

---
spring:
  jwt:
     secret: govlepel@$&
             
  mvc:
    view:
      prefix: /templates/
      suffix: .mustache             
             
